#!/bin/bash
# Capture and split KiloMoana underway feed on stdin

outdir=${1:-.}
[ ! -d "$outdir" ] && mkdir "$outdir"

GPGGAFILE="$outdir/HOT_GPGGA_feed.txt"
GPVTGFILE="$outdir/HOT_GPVTG_feed.txt"
FLORFILE="$outdir/HOT_flor_feed.txt"
METFILE="$outdir/HOT_met_feed.txt"
UTHSLFILE="$outdir/HOT_uthsl_feed.txt"

awk \
    -v gpgga="$GPGGAFILE" \
    -v gpvtg="$GPVTGFILE" \
    -v flor="$FLORFILE" \
    -v met="$METFILE" \
    -v uthsl="$UTHSLFILE" \
    '
    # These tflor and uthsl sections are to mitigate the 1kHz rate
    # problem where tflor and uthsl were repeated 1/ms, and we want
    # to skip all tflor lines and only keep one uthsl entry per s.
    $7 == "tflor" { next; }
    /^[^$]/ && $7 != uthsl {date=$1 " " $2 " " $3 " " $4 " " $5 " " $6};
    # Guarantee that uthsl gets printed only every second
    $7 == "uthsl" {
        # timestamp at second resolution
        # This assumes input is chronologically ordered
        uthsldate=$1 " " $2 " " $3 " " $4 " " $5;
        if (uthsldate > prevuthsldate && length(prevuthslline) > 0) {
            print prevuthslline >> uthsl;
            fflush(uthsl);
        }
        prevuthslline = $0
        prevuthsldate = uthsldate;
        next;
    };
    $7 == "flor" {print $0 >> flor; fflush(flor); next};
    $7 == "met" {print $0 >> met; fflush(met); next};
    /^\$GPGGA/ {print date, $0 >> gpgga; fflush(gpgga); next};
    /^\$GPVTG/ {print date, $0 >>gpvtg; fflush(gpvtg); next};

    END {print prevuthslline >> uthsl}
    '
